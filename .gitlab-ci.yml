variables:
  RELEASE_NAME: "SERVICE_NAME"
  SERVICE_PORT: 80
  REGISTRY_URL: 279716074232.dkr.ecr.us-east-1.amazonaws.com/pgdockrepo

stages:
  - Build
  - ReleaseCleanup
  - ReleaseDeploy
  - Validation

Build:
  stage: Build
  script:
  - $(aws ecr get-login --no-include-email --region us-east-1)
  - docker build -t 279716074232.dkr.ecr.us-east-1.amazonaws.com/pgdockrepo:$CI_PIPELINE_ID .
  - docker push 279716074232.dkr.ecr.us-east-1.amazonaws.com/pgdockrepo:$CI_PIPELINE_ID

ReleaseCleanup:
   stage: ReleaseCleanup
   script: 
   -  echo `pwd`
   -  cd ./helm && /usr/local/bin/helm delete --purge $RELEASE_NAME && exit 0
   allow_failure: true

ReleaseDeploy:
   stage: ReleaseDeploy
   script:
   - echo `pwd`
   - sed -i s/#BUILD_ID#/$CI_PIPELINE_ID/g ./helm/service/values.yaml 
   - sed -i s/#SERVICE_PORT#/$SERVICE_PORT/g ./helm/service/values.yaml
   - cd ./helm && /usr/local/bin/helm install service --name $RELEASE_NAME
   
Validation:
    stage: Validation
    script:
    - sleep 45
    - if [ `curl -s -o /dev/null -I -w "%{http_code}" https://pgsandbox.altimetrik.com/$RELEASE_NAME/` = "200" ]; then exit 0; else exit 1; fi
    allow_failure: false
